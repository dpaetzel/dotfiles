source ~/.zsh/oh-my-zsh-boilerplate.zsh

# exports: see .zshenv

source $HOME/.zsh/interface.zsh
source $HOME/.zsh/z/z.sh

source $HOME/.zsh/suffixes.zsh
source $HOME/.zsh/globals.zsh
source $HOME/.zsh/directories.zsh

# general command redefinitions
alias grep='grep --color'
alias feh='feh --theme=default'
alias nmcli='nmcli --ask'
alias irb='irb --simple-prompt'
alias ghc='ghc -outputdir /tmp'

# general aliases
alias s='sudo'
alias c='clear'
alias v='emacsclient -a emacs'
alias so='source ~/.zshrc'
alias here='nohup urxvt -uc > /dev/null &'
alias pxx='ps ax o %cpu,%mem,comm,pid,start k-%cpu,-%mem'
alias px='pxx | head -20'

# ssh key management
function sadd {
    # if ssh-agent is not running in this terminal: start it
    if [[ -z $SSH_AGENT_PID ]]; then
        eval $(ssh-agent | head -2)
    fi

    # if only one parameter provided: use it as filename for the key
    if [[ -z $2 ]]; then
        if (ssh-add -l | cut -d \  -f 3 | grep $1 > /dev/null); then
            echo "key already loaded"
        else
            ssh-add $1
        fi
    # else use provided host and user name to generate a filename
    else
        if (ssh-add -l | cut -d \  -f 3 | grep $HOME/.ssh/id_rsa.$1.$2 > /dev/null); then
            echo "key already loaded"
        else
            ssh-add ~/.ssh/id_rsa.$1.$2
        fi
    fi
}
alias gadd='sadd ~/.ssh/id_rsa.github'
alias hadd='sadd heraklit guest'

# dropbox-related commands
function lsd { # list sync status of current dir
    dropbox-cli filestatus |\
        grep -v "^\." |\
        grep -v ":.*unwatched" |\
        sed -r "s/up to date/■/; s/syncing/□/; s/(.*): *([■□])/\2 \1/"
}
function dbw { # dropbox is loading what?
    for x in $(find ~/Dropbox); do
        dropbox-cli filestatus ${(f)"$(print $x)"} | grep -v "up to date"
    done
}
alias dbs='dropbox-cli status'
alias dbstop='dropbox-cli stop'
alias dbstart='dropbox-cli start'
alias dbss='watch dropbox-cli status'

# xdg-mime stuff
function which-app {
    mimetype=`xdg-mime query filetype $1`
    application=`xdg-mime query default $mimetype | sed -r 's/\.desktop//'`
    printf "$mimetype: $application\n"
}
alias set-app='xdg-mime default'

# git abbreviations
alias g='git'
alias a='git annex'
alias add='git annex add'

# systemctl aliases
alias sctl='sudo systemctl'
alias start="sudo systemctl start"
alias stop="sudo systemctl stop"
alias restart="sudo systemctl restart"

# file operations
alias ls='ls --color=auto'
alias l='ls -CF'
alias la='ls -A'
alias lla='ls -alFh'
alias lld='du -h | grep "\./[^/]\+$" | sed -e "s/\(.*\)\.\/\(.*\)/\1\2/"'
alias df='dfc'
alias f='find . -name'
alias rm='mv -v --target-directory=$HOME/.TRASH'
alias rmr='command rm -rfv'
alias cp='cp -v'
alias mv='mv -v'
alias mmv='noglob zmv'
alias x='chmod +x'
function getimgs {
    folder=img-`date -I`
    mkdir $folder
    cd $folder
    adb pull storage/sdcard1/DCIM/Camera
}
function sortimgs {
    local folder=$(mktemp -d -p .)
    feh --action "mv %n $folder" --action1 "mkdir TRASH; mv %n TRASH"
    ls $folder
    read name
    mv $folder $name
}

# sbt commands
alias sc='sbt "~compile"'
alias stc='sbt "~test:compile"'
function st {
    while true; do
        if [[ -z $@ ]]; then
            sbt test
        else
            sbt "test-only $*"
        fi
        read
    done
}
function sr { sbt "run $@" }
function srm { sbt "run-main $@" }
function sr- { sbt "~run $@" }
function srm- { sbt "~run-main $@" }
function sbtmuch {
    while true; do
        columns=$(tput cols)
        let "lines = $(tput lines) - 1"
        tail_lines=4
        let "head_lines = $lines - $tail_lines"
        echo "compiling..."
        sbt $1 | fold -s --width=$columns > compile.log
        clear
        log_lines=`wc -l compile.log | sed "s/ .*//"`
        if [[ $log_lines -gt $lines ]]; then
            head -$head_lines compile.log
            tail -$tail_lines compile.log
        else
            cat compile.log
        fi
        read
    done
}
alias stcmuch='sbtmuch test:compile'
alias scmuch='sbtmuch compile'

# power management
alias unparm='sudo hdparm -B 254 /dev/sda'
alias woff='sudo iwconfig wlp3s0 txpower off'
alias won='sudo iwconfig wlp3s0 txpower on'

# misc
alias sortc='LC_COLLATE=C sort'
alias linesifs="IFS=$'\n'"
alias normalifs="unset IFS"
alias imap='killall -9 offlineimap && sleep 1 && offlineimap'
alias reconky='killall conky; conky -c ~/.conkyrc'
alias bt='sudo bluetoothctl'
alias pg='pdfgrep --ignore-case --page-number'
alias hids='cat /sys/class/hidraw/hidraw*/device/uevent | grep NAME'
alias pair_it='sudo pairing_tool /dev/`ls -l /sys/class/hidraw/hidraw*/device/driver | awk -F/ '/receiver/{print $5}'`'
alias vboxmods='sudo modprobe vboxdrv && sudo modprobe vboxnetadp && sudo modprobe vboxnetflt && sudo modprobe vboxpci'

# not ordered
alias wifi="iwconfig | grep -i --color quality | sed -r 's/.*=([^ ]+).*=([^ ]+).*/\1 (\2 dBm)/'"
alias hl="hledger"
function stripBankData {
    cat $1 | cut -d ';' -f 2,5,6,9 | awk -v FS=';' '{ print $4 ";" $3 ";" $1 ";" $2 }'
}
alias adbAsRoot="if adb kill-server; then; sudo adb start-server; else; adb devices; fi"
alias checkBuch="ledger --strict --f $HOME/Buchhaltung/Gesamt.journal bal"
function sumRSS {
    sumExpr=$(ps -e --format rss,comm | grep --color -i -E $1 | awk '{ print $1 }' | paste --delimiter + -s)
    echo $(( ( $sumExpr ) / 1000 ))
}
function generate-afew-filters {
    index=0
    for f in $(ls Mail/main); do
        fLower=$(echo "$f" | awk '{print tolower($0)}')
        echo "[Filter.$index]"
        echo "message = Tag messages in main/$f as $fLower"
        echo "query = folder:main/$f"
        echo "tags = +$fLower;+main"
        index=$(($index + 1))
    done
    echo "[Filter.$index]"
    echo "message = Remove new tag from all messages"
    echo "query = tag:new"
    echo "tags = -new"
}

alias mount="udisksctl mount -b"
alias umount="udisksctl unmount -b"
function m {
    dir=$(udisksctl mount -b $@ | sed -r 's/Mounted .* at (.*)./\1/')
    cd $dir
}
